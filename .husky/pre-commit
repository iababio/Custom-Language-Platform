#!/usr/bin/env sh
. "$(dirname -- "$0")/_/husky.sh"

# Set shell options for better error handling
set -e

echo "üîç Running linters and formatters..."
pnpm exec lint-staged

# Store the lint-staged exit status
LINT_STATUS=$?
if [ $LINT_STATUS -ne 0 ]; then
  echo "‚ùå Linting failed! Please fix the issues before committing."
  exit 1
fi

# Run Jest tests for changed files
echo "üß™ Running tests for changed files..."
CHANGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR | grep -E '\.(js|jsx|ts|tsx)$' || true)

if [ -n "$CHANGED_FILES" ]; then
  # Only run tests if there are JavaScript/TypeScript files changed
  # Use temporary file to avoid issues with command line length limits
  TEMP_FILE=$(mktemp)
  echo "$CHANGED_FILES" > "$TEMP_FILE"
  
  # Use findRelatedTests with the file containing the list of changed files
  pnpm test -- --bail --findRelatedTests $(cat "$TEMP_FILE")
  TEST_STATUS=$?
  
  # Clean up temporary file
  rm "$TEMP_FILE"
  
  if [ $TEST_STATUS -ne 0 ]; then
    echo "‚ùå Tests failed! Please fix the failing tests before committing."
    exit 1
  fi
else
  echo "‚ÑπÔ∏è No relevant files changed. Skipping tests."
fi

echo "‚úÖ All checks passed!"